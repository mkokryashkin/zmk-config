// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
};

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combos_right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <2 3>;
            layers = <0>;
        };

        combos_left_par {
            bindings = <&kp LS(LEFT_PARENTHESIS)>;
            key-positions = <6 7>;
            layers = <0>;
        };

        combos_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0>;
        };

        combos_alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <16 17>;
            layers = <0>;
        };

        combos_right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <22 23>;
            layers = <0>;
        };

        combos_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
            layers = <0>;
        };

        combos_asterisk {
            bindings = <&kp LS(N8)>;
            key-positions = <12 13>;
            layers = <1>;
        };

        combos_ampersand {
            bindings = <&kp LS(N7)>;
            key-positions = <16 17>;
            layers = <1>;
        };

        combos_quote {
            bindings = <&kp SQT>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W        &kp E           &kp R             &kp T        &kp Y      &kp U              &kp I           &kp O             &kp P
&kp A       &kp S        &kp D           &kp F             &kp G        &kp H      &kp J              &kp K           &kp L             &kp SEMI
&mt LCMD Z  &mt LCTRL X  &mt LEFT_ALT C  &mt LEFT_SHIFT V  &kp B        &kp N      &mt RIGHT_SHIFT M  &mt RALT COMMA  &mt RCTRL PERIOD  &mt LEFT_WIN SLASH
                                         &lt 2 TAB         &kp ENTER    &kp SPACE  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp NUMBER_6  &kp N7     &kp N8        &kp N9      &kp N0        &kp HOME        &kp PG_UP       &kp PAGE_DOWN  &kp END          &kp DELETE
&kp N1        &kp N2     &kp N3        &kp N4      &kp N5        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp DEL
&kp LEFT_WIN  &kp LCTRL  &kp LEFT_ALT  &kp LSHIFT  &none         &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP    &kp END          &kp BACKSLASH
                                       &trans       &kp ESCAPE    &trans          &trans
            >;
        };

        left_layer {
            bindings = <
&kp NUMBER_1       &kp NUMBER_2     &kp NUMBER_3      &kp NUMBER_4                   &kp NUMBER_5       &kp NUMBER_6      &kp NUMBER_7              &kp NUMBER_8   &kp NUMBER_9          &kp NUMBER_0
&kp EXCLAMATION    &kp AT_SIGN      &kp HASH          &kp DOLLAR                     &kp PERCENT        &kp CARET         &kp AMPERSAND             &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&mt LWIN KP_EQUAL  &mt LCTRL MINUS  &mt LALT KP_PLUS  &mt RS(LEFT_SHIFT) LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &mt RSHIFT RIGHT_BRACKET  &mt RALT APOS  &mt RCTRL COLON       &mt RMETA BACKSLASH
                                                      &trans                         &trans             &kp GRAVE         &kp PIPE
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};

